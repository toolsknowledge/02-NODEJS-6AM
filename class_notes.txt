Day-1
*****
	JavaScript is the Scripting Language

	JavaScript Released by Netscape

	Current Version of JavaScript is ES13

	ES Stands for ECMA Script

	The extension for JavaScript files is ".js"

	we will include in webpages with <script></script> tag

	JavaScript, used to convert the static webpages to dynamic webpages

	JavaScript, used to build the Angular,React,Node and VueJS,.....

	we can execute JavaScript in two ways.

		1) intrepreter

		2) node


	intrepreter available in Browsers
	
	node tool present in NodeJS

	JavaScript Execution is Synchronous Execution 
		(Code will execute line by line)

	Vendor Released the so many predefined objects.

		Ex.
				window

				document

				console

				Date

				---
				---
				---

	so, we can call JavaScript is the Object Based Scripting Language

Software Installations
**********************
1) download and install NodeJS

	NodeJS containes node tool

	node tool helps to execute the JavaScripy

	website : https://nodejs.org/en/download/

	file    : node-v16.14.0-x64.msi



2) download and install IDE

	IDE Stands for Integrated Development Environment

	Visual Studio Code IDE is Suggestable IDE to build the JS Applications

	VSCode IDE Given by Microsoft and Open Source IDE

website : https://code.visualstudio.com/docs/?dv=win

file    : VSCodeUserSetup-x64-1.64.2.exe


Execution of JavaScript
***********************

> node demo.js

	where "demo.js" is the name of the javascript file

	where "node" is the tool

	where "node" tool, helps to execute the JavaScript.



Day-2
*****

	+   (plus)

	-   (minus)

	*  (multiplication)

	/ (division)

	== (double equal)

	===  (triplle equal)

	&   (And)

	|   (OR)

	^ (XOR)

	!  (Bang)

	> (greater than)

	< (less than)


Day-3
*****
Variables
+++++++++
	- Variables are used to "store" the data

	Ex.
			string
			number
			boolean
			Arrays
			Objects
			---
			---
			---
	- we can declare the Variables by using "var" / "let" / "const"

	- "let" and "const" keyword introduced in "ES6"

	- Variables declaration should contain 

			a-z

			A-Z

			0-9

			$

			and 

			_

	- Variables declaration should not start with digits




1) Introduction to NodeJS

	
2) Installation of NodeJS


3) Http Server

		GET

		POST

		GET PARAMETERS

		POST PARAMETERS

4) ExpressJS

		Framework

		Node Framework

		Rest API'S
			
			GET
			POST
			PUT
			DELETE
			HEAD
			TRACE
			PATCH
			---
			---
			---

5) Modules in NodeJS

		Export

		Import


6) Databases Integration

		CRUD OPERATIONS

		C - CREATE

		R - READ

		U - UPDATE

		D - DELETE

		Oracle

		MySQL

		SQLServer

		POSTGRESQL

		MongoDB          ===> mongodb / mongoose



7) MEAN Stack

	M - MongoDB

	E - ExpressJS

	A - Angular

	N - NodeJS


8) MERN Stack

	M - MongoDB

	E - ExpressJS

	R - ReactJS

	N - NodeJS


9) Authentication

	JWT Authentication

	JSON Web Token Authentication


10) Mail API


11) Multer Module

		Uploading the Images to Server


12) Gmail Auth, Facebook Auth Twitter Auth

13) Production Build

14) Cloud Deployment

		AWS Deployment

		
15) Template Engines

		JADE


16) Socket IO
		


Introduction to NodeJS
**********************
	- NodeJS, is the runtime Environment to build the server side applications.

	- NodeJS, helps to build the "backend" applications.

	- NodeJS, depending on "ExpressJS" Framework to develop rest api's

		Ex.
			GET
			POST
			PUT
			DELETE
			---
			---
			---

	- we will build the NodeJS applications with the help of javaScript.

	- NodeJS, Supports the modules

modules
*******
1) http
	- http module, used to develop the http servers


2) express
	- express module, used to develop the Rest API'S

			GET
			POST
			PUT
			DELETE

3) mongodb

	mongodb module, used to connect to mongodb database without "schema"


4) mongoose

	mongodb module, used to connect to mongodb database with "schema"


Note : schema means rules and regulations


5) mysql

	mysql module, used to connect to mysql database

6) mssql

	mssql module, used to connect to SQLServer


7) oracledb

	this module used to connect to oracle database


8) multer

	multer module, used to upload the images to the server


9) socket.io

	used to implement the chat applications


10) cors

	used to enable the communication between ports


11) jwt-simple

	this module, used to generate the tokens
	
	these token are used to perform the token based authentication

we will download above modules in two ways.

1) npm

2) yarn

above libraries downloads to node_modules directory in current path

Software Installation
*********************
1) download and install NodeJS

	website : https://nodejs.org/en/download/

	file    : node-v16.14.1-x64.msi


2) install yarn tool

		yarn tool, used to download the libraries

		yarn tool, Released by Facebook

		yarn tool, Installation is command based Installation


		> npm install -g yarn

		where "-g" stands for global installation

3) install "nodemon" tool

	"nodemon" is the tool.

	"nodemon" tool, used to start the server in watch mode

	"nodemon" tool, installation also command based installation

	> npm install -g nodemon				



4) install Postman

	Postman is the tool, used to test the rest api calls


website : https://www.postman.com/downloads/




5) download and install Visual Studio Code

	Visual Studio Code is the IDE, released by Microsoft and open source IDE

	VSCode IDE Recomemded to build NodeJS Applications

	website : https://code.visualstudio.com/docs/?dv=win

	file    : VSCodeUserSetup-x64-1.65.2.exe



start the server
****************
1) > node <filename.js>

	Ex.

		> node server.js


2) > nodemon server.js

		automatically server will start in watch mode



MongoDB
*******
	- We have two types of Databases

			1) SQL Databases

					Ex. Oracle,MySQL,SQLServer

			2) NoSQL Databases

					Ex. MongoDB,CassandraDB

	- finally MongoDB Database is "NoSQL" Database

	- MongoDB Database Supports "JSON"

	- JSON Stands for "Java Script Object Notation"

	- Because of JSON, MongoDB Database is "light Weight" Database.

	- MongoDB Database follows the "mongodb" Protocol

	- By Default MongoDB Running on Port No.27017

	- NodeJS, can connect to MongoDB Database by using following libraries

			1) mongodb

			2) mongoose

	- mongodb wont follows the schema

	- mongoose follows the schema

	- "schema" means "rules and regulations" related to databases


						SQL												NoSQL

Ex.
			oracle													MongoDB

			MySQL													CassandraDB

			SQLServer

			
			will supports databases									will supports databases


			will supports "tables"									will support "collections"

			will support "primary key"								will support "_id"

			rows													documents

			field													property

	- MongoDB Database supports "Cloud" Environment in the form of "MongoDB Atlas"



















































































































































	















































































































































	






